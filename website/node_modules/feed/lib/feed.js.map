{"version":3,"sources":["../src/feed.js"],"names":["GENERATOR","DOCTYPE","Feed","options","items","categories","contributors","extensions","item","push","category","contributor","extension","format","console","warn","atom1","rss2","feed","_attr","xmlns","id","title","updated","ISODateString","Date","generator","root","author","name","email","link","uri","rel","href","atomLink","feedLinks","atom","hub","description","subtitle","image","logo","favicon","icon","copyright","rights","forEach","term","entry","type","_cdata","date","summary","content","Array","isArray","oneAuthor","published","isAtom","isContent","channel","lastBuildDate","toUTCString","docs","rss","version","url","guid","pubDate","some","enclosure","home_page_url","json","feed_url","e","objects","map","feedItem","html_content","date_modified","date_published","JSON","stringify","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","module","exports"],"mappings":"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","file":"feed.js","sourcesContent":["import xml from 'xml'\n\nconst GENERATOR = 'Feed for Node.js'\nconst DOCTYPE = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n'\n\nclass Feed {\n\n  constructor(options) {\n    this.options = options\n    this.items = []\n    this.categories = []\n    this.contributors = []\n    this.extensions = []\n  }\n\n  addItem(item) {\n    this.items.push(item)\n  }\n\n  addCategory(category) {\n    this.categories.push(category)\n  }\n\n  addContributor(contributor) {\n    this.contributors.push(contributor)\n  }\n\n  addExtension(extension) {\n    this.extensions.push(extension)\n  }\n\n  render(format) {\n    console.warn('DEPRECATED: use atom1() or rss2() instead of render()');\n    if (format === 'atom-1.0') {\n      return this.atom1();\n    } else {\n      return this.rss2();\n    }\n  }\n\n  atom1() {\n    const { options } = this\n\n    let feed = [\n      { _attr: { xmlns: 'http://www.w3.org/2005/Atom' } },\n      { id: options.id },\n      { title: options.title },\n      { updated: (options.updated ? this.ISODateString(options.updated) : this.ISODateString(new Date())) },\n      { generator: options.generator || GENERATOR },\n    ]\n\n    let root = [{ feed }]\n\n    if (options.author) {\n      const { name, email, link } = options.author\n      let author = []\n\n      if (name) {\n        author.push({ name });\n      }\n\n      if (email) {\n        author.push({ email });\n      }\n\n      if (link) {\n        author.push({ uri: link });\n      }\n\n      feed.push({ author })\n    }\n\n    // link (rel=\"alternate\")\n    if(options.link) {\n      feed.push({ link: { _attr: { rel: 'alternate', href: options.link }}});\n    }\n\n    // link (rel=\"self\")\n    const atomLink = options.feed || (options.feedLinks && options.feedLinks.atom);\n    if(atomLink) {\n      feed.push({ \"link\": { _attr: { rel: 'self', href: atomLink }}});\n    }\n\n    // link (rel=\"hub\")\n    if(options.hub) {\n      feed.push({ link: { _attr: { rel:'hub', href: options.hub }}});\n    }\n\n    /**************************************************************************\n     * \"feed\" node: optional elements\n     *************************************************************************/\n\n    if(options.description) {\n      feed.push({ subtitle: options.description });\n    }\n\n    if(options.image) {\n      feed.push({ logo: options.image });\n    }\n\n    if(options.favicon) {\n      feed.push({ icon: options.favicon });\n    }\n\n    if(options.copyright) {\n      feed.push({ rights: options.copyright });\n    }\n\n    this.categories.forEach(category => {\n      feed.push({ category: [{ _attr: { term: category } }] });\n    })\n\n    this.contributors.forEach(item => {\n      const { name, email, link } = item\n      let contributor = [];\n\n      if(name) {\n        contributor.push({ name });\n      }\n\n      if(email) {\n        contributor.push({ email });\n      }\n\n      if(link) {\n        contributor.push({ uri: link });\n      }\n\n      feed.push({ contributor });\n    })\n\n    // icon\n\n    /**************************************************************************\n     * \"entry\" nodes\n     *************************************************************************/\n    this.items.forEach(item => {\n      //\n      // entry: required elements\n      //\n\n      let entry = [\n        { title: { _attr: { type: 'html' }, _cdata: item.title }},\n        { id: item.id || item.link },\n        { link: [{ _attr: { href: item.link } }]},\n        { updated: this.ISODateString(item.date) }\n      ]\n\n      //\n      // entry: recommended elements\n      //\n      if(item.description) {\n        entry.push({ summary: { _attr: { type: 'html' }, _cdata: item.description }});\n      }\n\n      if(item.content) {\n        entry.push({ content: { _attr: { type: 'html' }, _cdata: item.content }});\n      }\n\n      // entry author(s)\n      if(Array.isArray(item.author)) {\n        item.author.forEach(oneAuthor => {\n          const { name, email, link } = oneAuthor\n          let author = [];\n\n          if(name) {\n            author.push({ name });\n          }\n\n          if(email) {\n            author.push({ email });\n          }\n\n          if(link) {\n            author.push({ uri: link });\n          }\n\n          entry.push({ author });\n        })\n      }\n\n      // content\n\n      // link - relative link to article\n\n      //\n      // entry: optional elements\n      //\n\n      // category\n\n      // contributor\n      if(Array.isArray(item.contributor)) {\n        item.contributor.forEach(item => {\n          const { name, email, link } = item\n          let contributor = [];\n\n          if(name) {\n            contributor.push({ name });\n          }\n\n          if(email) {\n            contributor.push({ email });\n          }\n\n          if(link) {\n            contributor.push({ uri: link });\n          }\n\n          entry.push({ contributor });\n        })\n      }\n\n      // published\n      if(item.published) {\n        entry.push({ published: this.ISODateString(item.published) });\n      }\n\n      // source\n\n      // rights\n      if(item.copyright) {\n        entry.push({ rights: item.copyright });\n      }\n\n      feed.push({ entry: entry });\n    })\n\n    return DOCTYPE + xml(root, true);\n  }\n\n  rss2() {\n    const { options } = this\n    let isAtom = false\n    let isContent = false\n\n    let channel = [\n      { title: options.title },\n      { link: options.link },\n      { description: options.description },\n      { lastBuildDate: (options.updated ? options.updated.toUTCString() : new Date().toUTCString()) },\n      { docs: 'http://blogs.law.harvard.edu/tech/rss'},\n      { generator: options.generator || GENERATOR },\n    ]\n\n    let rss = [\n      { _attr: { version: '2.0' } },\n      { channel },\n    ]\n\n    let root = [{ rss }]\n\n    /**\n     * Channel Image\n     * http://cyber.law.harvard.edu/rss/rss.html#ltimagegtSubelementOfLtchannelgt\n     */\n    if(options.image) {\n       channel.push({\n        image: [\n          { title: options.title },\n          { url: options.image },\n          { link: options.link },\n        ]\n      });\n     }\n\n    /**\n     * Channel Copyright\n     * http://cyber.law.harvard.edu/rss/rss.html#optionalChannelElements\n     */\n    if(options.copyright) {\n      channel.push({ copyright: options.copyright });\n    }\n\n    /**\n     * Channel Categories\n     * http://cyber.law.harvard.edu/rss/rss.html#comments\n     */\n    this.categories.forEach(category => {\n      channel.push({ category });\n    })\n\n    /**\n     * Feed URL\n     * http://validator.w3.org/feed/docs/warning/MissingAtomSelfLink.html\n     */\n    const atomLink = options.feed || (options.feedLinks && options.feedLinks.atom);\n    if(atomLink) {\n      isAtom = true\n\n      channel.push({\n        \"atom:link\": {\n          _attr: {\n            href: atomLink,\n            rel: 'self',\n            type: 'application/rss+xml',\n          },\n        },\n      })\n    }\n\n    /**\n     * Hub for PubSubHubbub\n     * https://code.google.com/p/pubsubhubbub/\n     */\n    if(options.hub) {\n      isAtom = true;\n      channel.push({\n        \"atom:link\": {\n          _attr: {\n            href: options.hub,\n            rel: 'hub',\n          },\n        },\n      })\n    }\n\n    /**\n     * Channel Categories\n     * http://cyber.law.harvard.edu/rss/rss.html#hrelementsOfLtitemgt\n     */\n    this.items.forEach(entry => {\n      let item = [];\n\n      if(entry.title) {\n        item.push({ title: { _cdata: entry.title }});\n      }\n\n      if(entry.link) {\n        item.push({ link: entry.link });\n      }\n\n      if(entry.guid) {\n        item.push({ guid: entry.guid });\n      } else if (entry.link) {\n        item.push({ guid: entry.link });\n      }\n\n      if(entry.date) {\n        item.push({ pubDate: entry.date.toUTCString() });\n      }\n\n      if(entry.description) {\n        item.push({ description: { _cdata: entry.description }});\n      }\n\n      if(entry.content) {\n        isContent = true;\n        item.push({ 'content:encoded': { _cdata: entry.content }});\n      }\n      /**\n       * Item Author\n       * http://cyber.law.harvard.edu/rss/rss.html#ltauthorgtSubelementOfLtitemgt\n       */\n      if(Array.isArray(entry.author)) {\n        entry.author.some(author => {\n          if (author.email && author.name) {\n            item.push({ author: author.email + ' (' + author.name + ')' })\n            return true\n          } else {\n            return false\n          }\n        })\n      }\n\n      if(entry.image) {\n        item.push({ enclosure: [{ _attr: { url: entry.image } }] });\n      }\n\n      channel.push({ item });\n    })\n\n    if(isContent) {\n      rss[0]._attr['xmlns:content'] = 'http://purl.org/rss/1.0/modules/content/';\n    }\n\n    if(isAtom) {\n      rss[0]._attr['xmlns:atom'] = 'http://www.w3.org/2005/Atom';\n    }\n\n    return DOCTYPE + xml(root, true);\n  }\n\n  json1() {\n    const { options, items, extensions } = this\n    let feed = {\n      version: 'https://jsonfeed.org/version/1',\n      title: options.title,\n    };\n\n    if (options.link) {\n      feed.home_page_url = options.link;\n    }\n\n    if (options.feedLinks && options.feedLinks.json) {\n      feed.feed_url = options.feedLinks.json;\n    }\n\n    if (options.description) {\n      feed.description = options.description;\n    }\n\n\n    if (options.image) {\n      feed.icon = options.image;\n    }\n\n    if (options.author) {\n      feed.author = {};\n      if (options.author.name) {\n          feed.author.name = options.author.name;\n      }\n      if (options.author.link) {\n          feed.author.url = options.author.link;\n      }\n    }\n\n    extensions.forEach(e => {\n      feed[e.name] = e.objects;\n    });\n\n    feed.items = items.map(item => {\n      let feedItem = {\n        id: item.id,\n        // json_feed distinguishes between html and text content\n        // but since we only take a single type, we'll assume HTML\n        html_content: item.content,\n      }\n      if (item.link) {\n        feedItem.url = item.link;\n      }\n      if(item.title) {\n        feedItem.title = item.title;\n      }\n      if (item.description) {\n        feedItem.summary = item.description;\n      }\n\n      if (item.image) {\n        feedItem.image = item.image\n      }\n\n      if (item.date) {\n        feedItem.date_modified = this.ISODateString(item.date);\n      }\n      if (item.published) {\n        feedItem.date_published = this.ISODateString(item.published);\n      }\n\n      if (item.author) {\n        let author = item.author;\n        if (author instanceof Array) {\n          // json feed only supports 1 author per post\n          author = author[0];\n        }\n        feedItem.author = {};\n        if (author.name) {\n            feedItem.author.name = author.name;\n        }\n        if (author.link) {\n            feedItem.author.url = author.link;\n        }\n      }\n\n      if(item.extensions) {\n        item.extensions.forEach(e => {\n          feedItem[e.name] = e.objects;\n        });\n      }\n\n      return feedItem;\n    });\n\n    return JSON.stringify(feed, null, 4);\n  }\n\n  ISODateString(d) {\n    function pad(n) {\n      return n<10 ? '0'+n : n\n    }\n\n    return d.getUTCFullYear() + '-'\n      + pad(d.getUTCMonth() + 1) + '-'\n      + pad(d.getUTCDate()) + 'T'\n      + pad(d.getUTCHours()) + ':'\n      + pad(d.getUTCMinutes()) + ':'\n      + pad(d.getUTCSeconds()) + 'Z'\n  }\n\n}\n\nmodule.exports = Feed\n"]}